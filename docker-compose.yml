services:

  # Node-RED
  node-red:
    container_name: waterdistribution-node-red
    build:
      context: ./nodered-custom/
      dockerfile: Dockerfile
    image: custom_nodered:latest
    environment:
      - MYSQLUSERNAME=${MYSQLUSERNAME}
      - MYSQLPASSWORD=${MYSQLPASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    ports:
      - "1880:1880"
    networks:
      waterdistribution-network:
        ipv4_address: 172.30.0.100
    volumes:
      - ./nodered-custom/data:/data
      - ./shared_data:/shared-data
    depends_on:
      - influxdb

  # MQTT Broker
  mosquitto:
    container_name: waterdistribution-mosquitto
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/data:/mosquitto/data
    restart: always
    networks:
      waterdistribution-network:
        ipv4_address: 172.30.0.101
    ports:
      - "1883:1883"
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-h", "127.0.0.1", "-t", "test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # InfluxDB
  influxdb:
    container_name: waterdistribution-influxdb
    image: influxdb:2.7.4
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb-admin-token
      DOCKER_INFLUXDB_INIT_ORG: univaq
      DOCKER_INFLUXDB_INIT_BUCKET: waterdistribution
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
    secrets:
      - influxdb-admin-username
      - influxdb-admin-password
      - influxdb-admin-token
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    networks:
      waterdistribution-network:
        ipv4_address: 172.30.0.104
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Sensors
  sensors:
    container_name: waterdistribution-sensors
    build:
      context: ./Sensors
      dockerfile: Dockerfile
    image: waterdistribution-sensors:latest
    environment:
      - MQTT_BROKER=${MQTT_BROKER}
    networks:
      waterdistribution-network:
        ipv4_address: 172.30.0.102
    volumes:
      - ./Sensors:/sensors
      

  # Grafana
  grafana:
      container_name: waterdistribution-grafana
      image: grafana/grafana:latest
      ports:
        - "3000:3000" # Grafana default port
      environment:
        - GF_SECURITY_ADMIN_USER_FILE=/run/secrets/grafana-admin-user
        - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana-admin-password
        - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
        - GF_USERS_ALLOW_SIGN_UP=false
      volumes:
        - ./grafana/provisioning:/etc/grafana/provisioning
      networks:
        waterdistribution-network:
          ipv4_address: 172.30.0.103
      depends_on:
        - influxdb
      secrets:
        - grafana-admin-user
        - grafana-admin-password
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3000/"]
        interval: 30s
        timeout: 10s
        retries: 3

secrets:
  influxdb-admin-username:
    file: ./secrets/influxdb-admin-username
  influxdb-admin-password:
    file: ./secrets/influxdb-admin-password
  influxdb-admin-token:
    file: ./secrets/influxdb-admin-token
  grafana-admin-user:
    file: ./secrets/grafana-admin-user
  grafana-admin-password:
    file: ./secrets/grafana-admin-password

volumes:
  influxdb-data:
  influxdb-config:
  grafana-data:

networks:
  waterdistribution-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
